// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	entity "task-manager/internal/model/entity"

	mock "github.com/stretchr/testify/mock"
)

// IRepository is an autogenerated mock type for the IRepository type
type IRepository struct {
	mock.Mock
}

// Save provides a mock function with given fields: tasks
func (_m *IRepository) Save(tasks []entity.Task) error {
	ret := _m.Called(tasks)

	var r0 error
	if rf, ok := ret.Get(0).(func([]entity.Task) error); ok {
		r0 = rf(tasks)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SaveNumberOfWeek provides a mock function with given fields: numberOfWeek
func (_m *IRepository) SaveNumberOfWeek(numberOfWeek int) error {
	ret := _m.Called(numberOfWeek)

	var r0 error
	if rf, ok := ret.Get(0).(func(int) error); ok {
		r0 = rf(numberOfWeek)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewIRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewIRepository creates a new instance of IRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIRepository(t mockConstructorTestingTNewIRepository) *IRepository {
	mock := &IRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
